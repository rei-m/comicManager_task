/**************************************************************************************************
 * モジュール名　: コミックマスタ情報登録処理
 * 概要　　　　　: 取得したコミックマスタ情報をDBに登録する
 *************************************************************************************************/

// モジュール読み込み
var Q = require('q'),
    connDb = require('cmn/connDb');

/*
 * コミックマスタ情報登録処理
 * 概　要 : 取得したコミックマスタ情報をDBに登録する
 * 引　数 : in_comicList 取得したコミックリスト
 * 　　　 : in_db データベースオブジェクト
 * 戻り値 : promise（resolve：なし）
 */
function saveComicList(in_comicList, in_db){

  var _d = Q.defer();

  Q.when(in_db)
    // データベースオープン
    .then(connDb.openDb)
    .fail(function(in_err){
      _d.reject(in_err);
    })
    // コミックマスタ情報登録
    .then(function(in_conn){
      return upsertComicList(in_comicList, in_conn);
    })
    .fail(function(_e){
      _d.reject(_e);
    })
    // データベースをクローズして次の処理へ
    .done(function(){
      in_db.close();
      _d.resolve();
    });

  return _d.promise;
}

/*
 * コミックマスタリスト登録処理
 * 概　要 : コミックマスタリストをデータベースに登録する。
 * 引　数 : in_comicList 取得したコミックリスト
 * 　　　 : in_conn コネクション
 * 戻り値 : promise（resolve：なし）
 */
function upsertComicList(in_comicList, in_conn){

  var _d = Q.defer();

  // コミックリストが取得出来ている場合のみ登録
  if(in_comicList.length > 0){

    // コレクションを指定
    var collection = in_conn.collection('comics');
    var _args = {
      idx : 0,
      comicList : in_comicList,
      collection : collection
    };
    // コミックリストをデータベースに登録する
    var _q = Q.when(_args);
    for(var _i=0,_len=in_comicList.length;_i<_len;_i++){
      _q = _q.then(upsertComic);
    }

    _q.done(function(){
      _d.resolve();
    });
  }else{
    // コミックリスト情報が無い場合はログを出力して次の処理へ
    logger.warn('No List');
    _d.resolve();
  }
  return _d.promise;
}

/*
 * コミックマスタ登録処理
 * 概　要 : １件分のコミックマスタをデータベースに登録する。
 * 引　数 : in_args {URLリストアクセス用Index、取得結果格納用リスト}
 * 戻り値 : promise（resolve：なし）
 */
function upsertComic(in_args){

  var _d = Q.defer();

  // コミックリストから１件分の情報を取得
  var _comic = in_args.comicList[in_args.idx];

  // コミック情報をupsertする
  in_args.collection.update({
    title:_comic.title},
    _comic,
    {upsert:true},
    function(in_err){
      if(in_err){
        logger.warn(in_err.message);
      }
      // 正常に登録できたら次の処理へ
      in_args.idx++;
      _d.resolve(in_args);
    }
  );
  return _d.promise;
}

// コミックマスタ情報登録処理を公開
module.exports = saveComicList;