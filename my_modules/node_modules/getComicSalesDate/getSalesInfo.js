/**************************************************************************************************
 * モジュール名　:
 * 概要　　　　　:
 *************************************************************************************************/

// モジュール読み込み
var Q = require('q'),
    client = require('cheerio-httpcli'),
    dateformat = require('dateformat');

function getSalesInfo(in_urlList){
  var _d = Q.defer();
  var _args ={
    idx : 0,
    urlList : in_urlList,
    comicList : []
  };

  var _q = Q.when(_args); // deferred制御用キュー

  // 取得対象のURL分、スクレイピング処理をキューに格納
  for(var i=0, len=in_urlList.length;i<len;i++){
    _q = _q
      .then(sendRequest)
      .fail(function(in_err){
        _d.reject(in_err);
      });
  }
  // 全て取得し終わったらresolveにして取得したコミック情報を次の処理に渡す
  _q.done(function(){
    _d.resolve(_args.comicList);
  });

  return _d.promise;
}

function sendRequest(in_args){

  var _d = Q.defer();
  var _targetUrl = in_args.urlList[in_args.idx];

console.log(_targetUrl);

  client.fetch(_targetUrl,{}, function(_e, $, _res) {
    if (!_e && _res.statusCode === 200) {
      $('tr').each(function(_idx){
        var _$this = $(this);
        if(_$this.attr('align') === 'left'){
          var _$tds = _$this.find('td');
          if(_$tds.length === 6){
            var _salesYmd = trimUnusedChar(_$tds.eq(1).text()),
                _title = trimUnusedChar(_$tds.eq(3).text()),
                _publisher = trimUnusedChar(_$tds.eq(0).text()),
                _author = trimUnusedChar(_$tds.eq(4).text());
            _author = _author.split('/著').join('');
            var _key = _title.split(' ').join('') + '|' + _author.split(' ').join('');
            _key = _key.toLowerCase();

            var _salesY = _salesYmd.substr(0,4),
                _salesM = _salesYmd.substr(4,2),
                _salesD = _salesYmd.substr(6,2),
                _salesDate = new Date(_salesY+'-'+_salesM+'-'+_salesD + 'T00:00:00.000+09:00');
            in_args.comicList.push({
              title:_title,
              salesDate:_salesDate,
              salesY:_salesY,
              salesM:_salesM,
              salesD:_salesD,
              author:_author,
              publisher:_publisher,
              key:_key
            });
          }
        }
      });
    }else{
      _d.reject('Bad Request');
    }
    setTimeout(function(){
      in_args.idx++;
      _d.resolve(in_args);
    }, 2000);
  });
  return _d.promise;
}

function trimUnusedChar(in_str){
  return in_str
            .split('\n').join('')
            .split('　').join(' ')
            .trim();
}

module.exports = getSalesInfo;