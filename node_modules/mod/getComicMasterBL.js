/**************************************************************************************************
 * モジュール名　:
 * 概要　　　　　:
 * 作成日　　　　: 2014/03/05
 * 更新日　　　　: yyyy/MM/dd
 *************************************************************************************************/

// モジュール読み込み
var client = require('cheerio-httpcli'),
    deferred = require('deferred'),
    constComic = require("mod/constComic"),
    logger = require('mod/logger');

// コミックリスト
var comicList = [];

exports.getAndSaveComicList = function(db){

  // 処理開始
  logger.info("getComicMaster START");

  deferred(null)(function(){
    return getComicList();
  })(function(){
    return saveComicList(db);
  }).done(function(){
    // 処理終了
    logger.info("getComicMaster END");
  });

};

function getComicList(){

  // deferred作成
  var _def = deferred();

  getComiclistBase(0, _def.resolve);

  return _def.promise(function(){

  });
}

function getComiclistBase(in_subUrlIdx, in_resolve){
  // リクエスト情報
  var reqInfo = constComic.ARY_REQ_INFO[in_subUrlIdx];

  // スクレイピング開始
  client.fetch(reqInfo.url,{}, function(_e, $, _res) {
    if (!_e && _res.statusCode === 200) {
      comicList = comicList.concat(getComicInfo($, reqInfo));
    }else{
      logger.error("getComicMaster Bad Request");
    }
    if(in_subUrlIdx < constComic.ARY_REQ_INFO.length-1){
      getComiclistBase(in_subUrlIdx + 1, in_resolve);
    }else{
      in_resolve();
      return;
    }
  });
}

function getComicInfo($, reqInfo){
  var _upsertComicList = [];
  // タイトル・作者・出版社を抽出
  $("ul").each(function(_idx){
    if(reqInfo.idxF <= _idx && _idx <= reqInfo.idxT){
      var $li = $(this).find("li");
      $li.each(function(){
        var _title = $(this).find("a").eq(0).text(),
            _publisher = "",
            _author = "";
        var _etc = $(this).text().substr(_title.length)
            .split("　").join("")
            .split(" ").join("")
            .slice(1, -1),
            _aryEtc = _etc.split("、");
        if(_aryEtc.length > 1){
          _publisher = _aryEtc[_aryEtc.length - 1];
          _aryEtc.pop();
          _author = _aryEtc.join(" ");
        }else{
          _author = _etc;
        }
        // 全角スペースは半角スペースに置換
        _title = _title.split("　").join(" ");
        _publisher = _publisher.split("　").join(" ");
        _author = _author.split("　").join(" ");
        var _key = _title.split(" ").join("") + "|" + _author.split(" ").join("");
        _key = _key.toLowerCase();
        _upsertComicList.push({
          title:_title,
          publisher:_publisher,
          author:_author,
          key:_key
        });
      });
    }
  });
  return _upsertComicList;
}

function saveComicList(db){
  // deferred作成
  var _def = deferred();

  if(comicList.length > 0){
    var _comicCnt = comicList.length,
        _upsertCnt = 0;
    // DBへの接続
    db.open(function(err, db){
      if(err){
        throw err;
      }
      // コレクションを指定
      var collection = db.collection("comics");

      // MongoDBに登録（upsert、同一のタイトルが無ければ新規登録、あれば更新）
      for(var _i=0;_i<_comicCnt;_i++){
        collection.update(
          {title:comicList[_i].title},
          comicList[_i],
          {upsert:true},
          function(err){
            if(err){
              logger.warn(err.message);
            }
            _upsertCnt++;
            if(_upsertCnt === _comicCnt){
              _def.resolve();
            }
        });
      }
    });
  }else{
    logger.warn("getComicMaster No List");
    _def.resolve();
  }

  return _def.promise(function(){
    db.close();
  });
}
